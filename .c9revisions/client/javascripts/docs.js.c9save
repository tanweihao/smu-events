{"ts":1382339488388,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function() {\n  var CalendarEvent, CalendarEvents, ConfirmAction,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  CalendarEvent = (function() {\n\n    function CalendarEvent(container, add) {\n      var input;\n      this.container = container;\n      this.makeFullCalendarEventObject = __bind(this.makeFullCalendarEventObject, this);\n\n      this.handleDoubleClick = __bind(this.handleDoubleClick, this);\n\n      this.finalizeEvent = __bind(this.finalizeEvent, this);\n\n      this.handleInputBlur = __bind(this.handleInputBlur, this);\n\n      this.handleInputKeyup = __bind(this.handleInputKeyup, this);\n\n      this.container.bind(\"dblclick\", this.handleDoubleClick);\n      if (add != null) {\n        input = this.container.find(\"input\");\n        input.focus();\n        input.bind(\"keyup\", this.handleInputKeyup);\n        input.bind(\"blur\", this.handleInputBlur);\n      } else {\n        this.makeFullCalendarEventObject();\n      }\n    }\n\n    CalendarEvent.prototype.handleInputKeyup = function(e) {\n      var input;\n      input = $(e.target);\n      if (e.keyCode === 13) {\n        if (input.val().length === 0) {\n          return this.container.remove();\n        } else {\n          return this.finalizeEvent(input.val());\n        }\n      }\n    };\n\n    CalendarEvent.prototype.handleInputBlur = function(e) {\n      var input;\n      input = $(e.target);\n      if (input.val().length === 0) {\n        return this.container.remove();\n      } else {\n        return this.finalizeEvent(input.val());\n      }\n    };\n\n    CalendarEvent.prototype.finalizeEvent = function(val) {\n      this.container.find(\"a\").html(val);\n      return this.makeFullCalendarEventObject();\n    };\n\n    CalendarEvent.prototype.handleDoubleClick = function(e) {\n      var input, link, oldval,\n        _this = this;\n      input = $(\"<input type='text'>\");\n      link = $(e.target);\n      oldval = link.text();\n      input.val(oldval);\n      link.html(input);\n      input.focus();\n      input.bind(\"keyup\", function(e) {\n        if (e.keyCode === 13) {\n          if (input.val().length > 0) {\n            link.html(input.val());\n            return _this.makeFullCalendarEventObject();\n          } else {\n            return link.html(oldval);\n          }\n        }\n      });\n      return input.bind(\"blur\", function(e) {\n        if (input.val().length > 0) {\n          link.html(input.val());\n          return _this.makeFullCalendarEventObject();\n        } else {\n          return link.html(oldval);\n        }\n      });\n    };\n\n    CalendarEvent.prototype.makeFullCalendarEventObject = function() {\n      var eventObject, link;\n      link = $(this.container);\n      eventObject = {\n        title: $.trim(link.text())\n      };\n      link.data('eventObject', eventObject);\n      return link.draggable({\n        zIndex: 999,\n        revert: true,\n        revertDuration: 0\n      });\n    };\n\n    return CalendarEvent;\n\n  })();\n\n  CalendarEvents = (function() {\n\n    function CalendarEvents(container) {\n      this.container = container;\n      this.handleAddLink = __bind(this.handleAddLink, this);\n\n      this.addLink = this.container.find(\"#add-event\");\n      this.container.find(\"a.external-event\").each(function() {\n        return new CalendarEvent($(this));\n      });\n      this.template = \"<li><a class='external-event'><input type='text'></a></li>\";\n      this.addLink.bind(\"click\", this.handleAddLink);\n    }\n\n    CalendarEvents.prototype.handleAddLink = function() {\n      var view;\n      view = $(this.template);\n      view.insertBefore(this.addLink.parent());\n      return new CalendarEvent(view, true);\n    };\n\n    return CalendarEvents;\n\n  })();\n\n  ConfirmAction = (function() {\n\n    function ConfirmAction(container) {\n      var _this = this;\n      this.container = container;\n      this.link = this.container.find(\"a[rel='action']\");\n      this.confirm = this.container.find(\"[rel='confirm-action']\");\n      this.link.click(function() {\n        return _this.confirm.fadeIn();\n      });\n      this.cancelLink = this.container.find(\"a[rel='confirm-cancel']\");\n      this.confirmLink = this.container.find(\"a[rel='confirm-do']\");\n      this.confirmLink.hide();\n      this.confirmLink.click(function() {\n        return _this.container.slideUp();\n      });\n      this.confirmCheck = this.container.find(\"[rel='confirm-check']\");\n      this.cancelLink.click(function() {\n        _this.confirm.fadeOut();\n        _this.confirmCheck.removeAttr(\"checked\");\n        return _this.confirmLink.hide();\n      });\n      this.confirmCheck.change(function() {\n        if (_this.confirmCheck.attr(\"checked\") === \"checked\") {\n          return _this.confirmLink.fadeIn();\n        } else {\n          return _this.confirmLink.fadeOut();\n        }\n      });\n    }\n\n    return ConfirmAction;\n\n  })();\n\n  $(function() {\n    $(\"html, body\").off(\"touchstart\");\n    $(\"#modal-link\").click(function() {\n      return $('#modal').modal();\n    });\n    $('.input-error').tooltip();\n    $(\".chzn-select\").chosen();\n    $('textarea.tagme').tagify();\n    new Faq($(\".faq-list\"));\n    $('#datetimepicker').datepicker();\n    new ConfirmAction($(\"#fix-stats\"));\n    new ConfirmAction($(\"#fix-stats2\"));\n    new CalendarEvents($('#external-events'));\n    $('.data-table').dataTable({\n      \"bJQueryUI\": true,\n      \"sPaginationType\": \"full_numbers\",\n      \"sDom\": '<\"\"l>t<\"F\"fp>'\n    });\n    return $(\"#calendar\").fullCalendar({\n      events : [\n        {\n            title: 'Event1',\n            start: '2013-10-04'\n        },\n        {\n            title: 'Event2',\n            start: '2013-10-05'\n        }\n        ],\n      header: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'month,agendaWeek,agendaDay'\n      },\n      editable: true,\n      droppable: true,\n      drop: function(date, allDay) {\n        var copiedEventObject, originalEventObject;\n        originalEventObject = $(this).data('eventObject');\n        copiedEventObject = $.extend({}, originalEventObject);\n        copiedEventObject.start = date;\n        copiedEventObject.allDay = allDay;\n        $(\"#calendar\").fullCalendar('renderEvent', copiedEventObject, true);\n        if ($(\"#drop-remove\").is(\":checked\")) {\n          return $(this).remove();\n        }\n      }\n    });\n  });\n\n}).call(this);\n"]],"start1":0,"start2":0,"length1":0,"length2":6264}]],"length":6264}
{"contributors":[],"silentsave":false,"ts":1382339503482,"patch":[[{"diffs":[[0,"    "],[-1,"return $(\"#calendar\").fullCalendar({\n      events : [\n        {\n            title: 'Event1',\n            start: '2013-10-04'\n        },\n        {\n            title: 'Event2',\n            start: '2013-10-05'\n        }\n        ]"],[1,"var events;\n    $.ajax({\n    \turl: \"/api/events/event_list\",\n\t\ttype: \"GET\",\n\t\tcontentType: \"application/json\",\n    \tsuccess:function(json) {\n    \t\tevents = json;\n    \t}\n    });\n    return $(\"#calendar\").fullCalendar({\n      events : events"],[0,",\n  "]],"start1":5358,"start2":5358,"length1":234,"length2":247}]],"length":6277,"saved":false}
